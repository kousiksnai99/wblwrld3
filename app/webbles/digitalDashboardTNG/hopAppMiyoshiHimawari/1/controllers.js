//======================================================================================================================
// Controllers for Digital Dashboard 3.0 TNG Hands-on-Portal Himawari Weather Satellite App for Webble World v3.0 (2013)
// Created By: Jonas Sjobergh
// Edited By: Micke Kuwahara (truemrwalker)
//======================================================================================================================

//=======================================================================================
// WEBBLE CONTROLLER
// This is the Main controller for this Webble Template
// NOTE: This file must exist and be an AngularJS Controller declared as seen below.
//=======================================================================================
wblwrld3App.controller('hopAppHimawariAppLoaderWebbleCtrl', function($scope, $log, Slot, Enum, $location, $timeout, wwConsts) {
	//=== PROPERTIES ====================================================================
	$scope.stylesToSlots = {
		hopAppHimawariAppLoaderWebble: ['width', 'height', 'background-color', 'border', 'border-radius', 'opacity'],
	};

	$scope.displayText = "Loading the Himawari environment. Please wait...";
	var preDebugMsg = "hopAppHimawariAppLoaderWebble: ";

	// The Webble templates required for the application
	var hopSupportName = "HoPSupport";
	var parName = "hopVizParallelCoordinateHolderWebble";
	var barName = "hopVizBarChartWebble";
	var mapName = "hopVizMapWebble";
	var scatterName = "hopVizScatterPlotWebble";
	var dataSrcName = "hopFileDataWebble";

	var neededChildren = {};
	var loadedChildren = {};
	var setupDone = false;
	var listeners = [];
	var hopSuppWbl;
	var lastSeenMapping = "";
	var lastFormatString = "";



	//=== EVENT HANDLERS ================================================================

	//===================================================================================
	// On Resize
	// This Event handler takes care of window resize so that the component layout is
	// always at its best.
	//===================================================================================
	function onResize() {
		// $log.log(preDebugMsg + "onResize called");
		var windowWidth = $(window).width();
		var windowHeight = $(window).height() - 100;
		var topMarg = -100;
		var rowMarg = 20;
		var colMarg = 10;
		var vizHeight = 100;
		var vizWidth = 100;
		var parWidth = 583;
		var dataWidth = 315;
		var dataBottom = 410;
		var three = false;
		var one = false;

		if(windowHeight < 600) {
			topMarg = 0;
		}

		var usefulW = windowWidth - dataWidth - 20; // scroll bar on the side takes up some space
		var usefulH = windowHeight - 20;
		var ratio = usefulH / usefulW;
		var rows = [0, 100, 200, 300, 400, 500, 600];
		var cols = [250, 350, 450, 550, 650, 750, 850];

		$log.log(preDebugMsg + "ratio " + ratio);
		if(ratio > 1.25) {
			// 8 rows, 1 column
			vizHeight = Math.max(150, Math.floor(usefulH / 8 - rowMarg));
			vizWidth = usefulW + dataWidth - 5;
			for(var i = 0; i < 6; i++) {
				cols[i] = 5;
			}
			var top = 320;
			rows[0] = top;
			rows[1] = top + (rowMarg + vizHeight)*3;
			rows[2] = top + (rowMarg + vizHeight)*2;
			rows[3] = top + (rowMarg + vizHeight)*5;
			rows[4] = top + (rowMarg + vizHeight)*6;
			rows[5] = top + (rowMarg + vizHeight)*7;
		}
		else if(ratio > 0.6) {
			// 4 rows, 2 columns
			vizHeight = Math.max(150, Math.floor(usefulH / 4  - rowMarg));
			vizWidth = usefulW / 2 - colMarg;
			cols = [dataWidth, dataWidth + colMarg + vizWidth, dataWidth, dataWidth + colMarg + vizWidth, dataWidth, dataWidth + colMarg + vizWidth];
			rows = [topMarg, topMarg, topMarg + (vizHeight + rowMarg)*2, topMarg + (vizHeight + rowMarg)*2, topMarg + (vizHeight + rowMarg)*3, topMarg + (vizHeight + rowMarg)*3];
		}
		else if(ratio > 0.4) {
			// 3 rows, 3 columns
			three = true;
			vizHeight = Math.max(150, Math.floor(usefulH / 3  - rowMarg));
			vizWidth = usefulW / 3 - colMarg;
			cols = [dataWidth, dataWidth + colMarg + vizWidth, dataWidth, dataWidth + colMarg + vizWidth, dataWidth + 2*(colMarg + vizWidth), dataWidth + 2*(colMarg + vizWidth)];
			rows = [topMarg, topMarg, topMarg + (vizHeight + rowMarg)*2, topMarg + (vizHeight + rowMarg)*2, topMarg + (vizHeight + rowMarg)*2, topMarg];
		}
		else if(ratio > 0.25) {
			// two rows
			vizHeight = usefulH / 2 - rowMarg;
			vizWidth = Math.max(150, Math.floor(usefulW / 4 - colMarg));
			// $log.log(preDebugMsg + "1, 1, 2, 2: " + usefulW + " --> " + vizWidth);
			rows = [topMarg, topMarg, topMarg, topMarg, topMarg + vizHeight + rowMarg, topMarg + vizHeight + rowMarg];
			cols = [dataWidth, dataWidth + vizWidth + colMarg, dataWidth + (vizWidth + colMarg)*2, dataWidth + (vizWidth + colMarg)*3, dataWidth + (vizWidth + colMarg)*2, dataWidth + (vizWidth + colMarg)*3];
		}
		else {
			// one row
			vizHeight = usefulH;
			vizWidth = usefulW / 6 - colMarg;
			var left = dataWidth;
			for(var i = 0; i < 6; i++) {
				cols[i] = left;
				left += vizWidth + colMarg;
			}
			for(var i = 0; i < 6; i++) {
				rows[i] = topMarg;
			}
			one = true;
		}

		if(loadedChildren.hasOwnProperty(hopSupportName) && loadedChildren[hopSupportName].length > 0) {
			var hopSupp = $scope.getWebbleByInstanceId(loadedChildren[hopSupportName][0]);
			hopSupp.scope().set("root:top", 100);
			hopSupp.scope().set("root:left", 5);
		}

		if(loadedChildren.hasOwnProperty(dataSrcName) && loadedChildren[dataSrcName].length > 0) {
			var datasrc = $scope.getWebbleByInstanceId(loadedChildren[dataSrcName][0]);
			datasrc.scope().set("root:top", 100);
			datasrc.scope().set("root:left", 5);
		}

		if(loadedChildren.hasOwnProperty(mapName) && loadedChildren[mapName].length > 0) {
			var map = $scope.getWebbleByInstanceId(loadedChildren[mapName][0]);
			map.scope().set("root:top", rows[0]);
			map.scope().set("root:left", cols[0]);
			map.scope().set("mapDrawingArea:width", vizWidth);
			if(one) {
				map.scope().set("mapDrawingArea:height", vizHeight);
			}
			else {
				map.scope().set("mapDrawingArea:height", vizHeight * 2 + rowMarg);
			}
		}

		if(loadedChildren.hasOwnProperty(mapName) && loadedChildren[mapName].length > 1) {
			var map = $scope.getWebbleByInstanceId(loadedChildren[mapName][1]);
			map.scope().set("root:top", rows[1]);
			map.scope().set("root:left", cols[1]);
			map.scope().set("mapDrawingArea:width", vizWidth);
			if(one) {
				map.scope().set("mapDrawingArea:height", vizHeight);
			}
			else {
				map.scope().set("mapDrawingArea:height", vizHeight * 2 + rowMarg);
			}
		}

		if(loadedChildren.hasOwnProperty(barName) && loadedChildren[barName].length > 0) {
			var barChart = $scope.getWebbleByInstanceId(loadedChildren[barName][0]);
			barChart.scope().set("root:top", rows[2]);
			barChart.scope().set("root:left", cols[2]);
			barChart.scope().set("DrawingArea:width", vizWidth);
			barChart.scope().set("DrawingArea:height", vizHeight);
		}

		if(loadedChildren.hasOwnProperty(barName) && loadedChildren[barName].length > 1) {
			var barChart = $scope.getWebbleByInstanceId(loadedChildren[barName][1]);
			barChart.scope().set("root:top", rows[3]);
			barChart.scope().set("root:left", cols[3]);
			barChart.scope().set("DrawingArea:width", vizWidth);
			barChart.scope().set("DrawingArea:height", vizHeight);
		}

		if(loadedChildren.hasOwnProperty(scatterName) && loadedChildren[scatterName].length > 0) {
			var scatter = $scope.getWebbleByInstanceId(loadedChildren[scatterName][0]);
			scatter.scope().set("root:top", rows[4]);
			scatter.scope().set("root:left", cols[4]);
			scatter.scope().set("DrawingArea:width", vizWidth);
			scatter.scope().set("DrawingArea:height", vizHeight);
		}

		if(loadedChildren.hasOwnProperty(parName) && loadedChildren[parName].length > 0) {
			var par = $scope.getWebbleByInstanceId(loadedChildren[parName][0]);
			par.scope().set("DrawingArea:width", vizWidth);
			par.scope().set("root:top", rows[5]);
			par.scope().set("root:left", cols[5]);

			if(three) {
				par.scope().set("DrawingArea:height", vizHeight*2+rowMarg);
			}
			else {
				par.scope().set("DrawingArea:height", vizHeight);
			}
		}
	}
	//===================================================================================


	//===================================================================================
	// Data Source Updated
	// This event handler reacts to data source updates and make sure all visualization
	// Webbles change accordingly.
	//===================================================================================
	function dataSourceUpdated(datasrcWebbleID) {
		// $log.log(preDebugMsg + "dataSource was updated with new data");
		if(!setupDone) {
			return;
		}

		var datasrc = $scope.getWebbleByInstanceId(datasrcWebbleID);
		var dataFields = datasrc.scope().gimme("DataAccess");
		var newFormatStr = JSON.stringify(dataFields);
		if(newFormatStr != lastFormatString) {
			setMappings();
			lastFormatString = newFormatStr;
		}
	}
	//===================================================================================



	//=== METHODS & FUNCTIONS ===========================================================

	//===================================================================================
	// Webble template Initialization
	//===================================================================================
	$scope.coreCall_Init = function(theInitWblDef){
		$scope.set("root:opacity", 0.1);

		$scope.registerWWEventListener(Enum.availableWWEvents.loadingWbl, function(eventData){
			var newVal = eventData.targetId;
			// $log.log(preDebugMsg + "loadingWebble! " + newVal);

			if(!setupDone) {
				var thisChild = $scope.getWebbleByInstanceId(newVal);
				var templateId = thisChild.scope().theWblMetadata['templateid'];

				if(templateId && templateId !== "") {
					addNewlyLoadedChild(newVal, templateId);
				}
			}
		});

		loadWebbleDefs();
		$(window).bind("resize", onResize); // to update the Webble sizes when the browser window is resized
	};
	//===================================================================================


	//===================================================================================
	// Add Newly Loaded Child
	// This method adds a specific newly loaded child to the list of webbles being
	// maintained and manipulated
	//===================================================================================
	var addNewlyLoadedChild = function(webbleID, templateId) {
		$log.log(preDebugMsg + "addNewlyLoadedChild, " + webbleID + " " + templateId);
		if(!setupDone) {
			if(loadedChildren.hasOwnProperty(templateId)) {
				loadedChildren[templateId].push(webbleID);
			}
			else {
				return;
			}

			var newWbl = $scope.getWebbleByInstanceId(webbleID);

			if(templateId == "HoPSupport") {
				hopSuppWbl = newWbl;
			}

			if(templateId.indexOf("Data") >= 0) {
				// $log.log(preDebugMsg + "add listeners to data source");
				listeners.push($scope.registerWWEventListener(Enum.availableWWEvents.slotChanged, function(eventData){
					// $log.log(preDebugMsg + "Listener for data change");
					dataSourceUpdated(loadedChildren[dataSrcName][0]);
				}, webbleID, 'DataChanged'));
			}

			newWbl.scope().set("root:opacity", 0);

			// $log.log(preDebugMsg + "check if we should duplicate " + templateId);
			// check if this is a newly loaded template and if we should duplicate this
			if(loadedChildren[templateId].length == 1) {
				if(neededChildren[templateId] > loadedChildren[templateId].length) {
					var original = newWbl; // duplicate this Webble to get as many as we need
					for(var copies = loadedChildren[templateId].length; copies < neededChildren[templateId]; copies++) {
						// $log.log(preDebugMsg + "making more " + templateId + " Webbles.");
						original.scope().duplicate({x: 15, y: 15}, undefined);
					}
					return; // wait for the duplicates to arrive
				}
			}

			// $log.log(preDebugMsg + " check if we have everything");
			// check if all the Webbles we need are here yet
			var allHere = true;
			for (var type in neededChildren) {
				if (neededChildren.hasOwnProperty(type)) {
					// $log.log(preDebugMsg + "check if we have " + type + ", want " + neededChildren[type] + ", have " + loadedChildren[type].length);
					if(neededChildren[type] > loadedChildren[type].length) {
						// $log.log(preDebugMsg + "not enough " + type);
						allHere = false;

						if(loadedChildren[type].length == 0) {
							// $log.log(preDebugMsg + "load one " + type);
							$scope.downloadWebbleDef(type);
						}
						break;
					}
				}
			}

			if(allHere) {
				// $log.log(preDebugMsg + "all Webbles loaded.");
				setAllWebbleSlotsEtc();
			}
		}
	};
	//===================================================================================


	//===================================================================================
	// Set All Webble Slots Etc
	// This method sets all slots and connections for the loaded Webble components
	// included within in order to make this app work as it should.
	//===================================================================================
	var setAllWebbleSlotsEtc = function() {
		if(setupDone) {
			return;
		}

		var windowWidth = $(window).width();
		var windowHeight = $(window).height() - 100;

		for (var t in loadedChildren) {
			if (loadedChildren.hasOwnProperty(t)) {
				for(var w = 0; w < loadedChildren[t].length; w++) {
					$scope.getWebbleByInstanceId(loadedChildren[t][w]).scope().set("root:opacity", 1);
				}
			}
		}

		var fontSize = 11;

		var hopSupp = $scope.getWebbleByInstanceId(loadedChildren[hopSupportName][0]);
		hopSupp.scope().set("root:z-index", 1);

		var par = $scope.getWebbleByInstanceId(loadedChildren[parName][0]);
		par.scope().set("LineTransparency", 0.6);
		par.scope().set("PluginName", "Parallell Coordinates");
		par.scope().set('MultipleSelectionsDifferentGroups', true);

		var map1 = $scope.getWebbleByInstanceId(loadedChildren[mapName][0]);
		map1.scope().set("PluginName", "Map 1");
		map1.scope().set('MultipleSelectionsDifferentGroups', true);
		map1.scope().set('ZoomLevel', 4);
		map1.scope().set('MapCenterLatitude', 43.07);
		map1.scope().set('MapCenterLongitude', 141.35);
		map1.scope().set('ColorMethod', 1);
		map1.scope().set('Transparency', 0.8);

		var map2 = $scope.getWebbleByInstanceId(loadedChildren[mapName][1]);
		map2.scope().set("PluginName", "Map 2");
		map2.scope().set('MultipleSelectionsDifferentGroups', true);
		map2.scope().set('ZoomLevel', 1);
		map2.scope().set('MapCenterLatitude', 0);
		map2.scope().set('MapCenterLongitude', 133);
		map2.scope().set('ColorMethod', 4);
		map2.scope().set('Pre-setColorKey', 13);
		map2.scope().set('Transparency', 0.8);

		var scatter = $scope.getWebbleByInstanceId(loadedChildren[scatterName][0]);
		scatter.scope().set("DrawMean", true);
		scatter.scope().set("PluginName", "Scatter Plot");
		scatter.scope().set('MultipleSelectionsDifferentGroups', true);

		var barChart1 = $scope.getWebbleByInstanceId(loadedChildren[barName][0]);
		barChart1.scope().set("PluginName", "Bar Chart 1");
		barChart1.scope().set('MultipleSelectionsDifferentGroups', true);
		barChart1.scope().set('BarSeparatorWidth', 1);
		barChart1.scope().set('MinimumBarWidth', 3);
		barChart1.scope().set('UseLogaritmicCounts', false);

		var barChart2 = $scope.getWebbleByInstanceId(loadedChildren[barName][1]);
		barChart2.scope().set("PluginName", "Bar Chart 2");
		barChart2.scope().set('MultipleSelectionsDifferentGroups', true);
		barChart2.scope().set('BarSeparatorWidth', 1);
		barChart2.scope().set('MinimumBarWidth', 3);
		barChart2.scope().set('UseLogaritmicCounts', false);

		var datasrc = $scope.getWebbleByInstanceId(loadedChildren[dataSrcName][0]);
		datasrc.scope().set("FontSize", 9);

		var data = {"fieldNames":["\"longitude\"","\"latitude\"","\"himawari\""],"fieldTypes":["longitude","latitude","number"],"columns":[[139.600006103516,139.800003051758,140,140.199996948242,140.399993896484,140.600006103516,140.800003051758,141,141.199996948242,141.399993896484,141.600006103516,141.800003051758,142,142.199996948242,142.399993896484,142.600006103516,142.800003051758,143,143.199996948242,143.399993896484,143.600006103516,143.800003051758,144,144.199996948242,144.399993896484,144.600006103516,144.800003051758,145,145.199996948242,145.399993896484,145.600006103516,139.600006103516,139.800003051758,140,140.199996948242,140.399993896484,140.600006103516,140.800003051758,141,141.199996948242,141.399993896484,141.600006103516,141.800003051758,142,142.199996948242,142.399993896484,142.600006103516,142.800003051758,143,143.199996948242,143.399993896484,143.600006103516,143.800003051758,144,144.199996948242,144.399993896484,144.600006103516,144.800003051758,145,145.199996948242,145.399993896484,145.600006103516,139.600006103516,139.800003051758,140,140.199996948242,140.399993896484,140.600006103516,140.800003051758,141,141.199996948242,141.399993896484,141.600006103516,141.800003051758,142,142.199996948242,142.399993896484,142.600006103516,142.800003051758,143,143.199996948242,143.399993896484,143.600006103516,143.800003051758,144,144.199996948242,144.399993896484,144.600006103516,144.800003051758,145,145.199996948242,145.399993896484,145.600006103516,139.600006103516,139.800003051758,140,140.199996948242,140.399993896484,140.600006103516,140.800003051758,141,141.199996948242,141.399993896484,141.600006103516,141.800003051758,142,142.199996948242,142.399993896484,142.600006103516,142.800003051758,143,143.199996948242,143.399993896484,143.600006103516,143.800003051758,144,144.199996948242,144.399993896484,144.600006103516,144.800003051758,145,145.199996948242,145.399993896484,145.600006103516,139.600006103516,139.800003051758,140,140.199996948242,140.399993896484,140.600006103516,140.800003051758,141,141.199996948242,141.399993896484,141.600006103516,141.800003051758,142,142.199996948242,142.399993896484,142.600006103516,142.800003051758,143,143.199996948242,143.399993896484,143.600006103516,143.800003051758,144,144.199996948242,144.399993896484,144.600006103516,144.800003051758,145,145.199996948242,145.399993896484,145.600006103516,139.600006103516,139.800003051758,140,140.199996948242,140.399993896484,140.600006103516,140.800003051758,141,141.199996948242,141.399993896484,141.600006103516,141.800003051758,142,142.199996948242,142.399993896484,142.600006103516,142.800003051758,143,143.199996948242,143.399993896484,143.600006103516,143.800003051758,144,144.199996948242,144.399993896484,144.600006103516,144.800003051758,145,145.199996948242,145.399993896484,145.600006103516,139.600006103516,139.800003051758,140,140.199996948242,140.399993896484,140.600006103516,140.800003051758,141,141.199996948242,141.399993896484,141.600006103516,141.800003051758,142,142.199996948242,142.399993896484,142.600006103516,142.800003051758,143,143.199996948242,143.399993896484,143.600006103516,143.800003051758,144,144.199996948242,144.399993896484,144.600006103516,144.800003051758,145,145.199996948242,145.399993896484,145.600006103516,139.600006103516,139.800003051758,140,140.199996948242,140.399993896484,140.600006103516,140.800003051758,141,141.199996948242,141.399993896484,141.600006103516,141.800003051758,142,142.199996948242,142.399993896484,142.600006103516,142.800003051758,143,143.199996948242,143.399993896484,143.600006103516,143.800003051758,144,144.199996948242,144.399993896484,144.600006103516,144.800003051758,145,145.199996948242,145.399993896484,145.600006103516,139.600006103516,139.800003051758,140,140.199996948242,140.399993896484,140.600006103516,140.800003051758,141,141.199996948242,141.399993896484,141.600006103516,141.800003051758,142,142.199996948242,142.399993896484,142.600006103516,142.800003051758,143,143.199996948242,143.399993896484,143.600006103516,143.800003051758,144,144.199996948242,144.399993896484,144.600006103516,144.800003051758,145,145.199996948242,145.399993896484,145.600006103516,139.600006103516,139.800003051758,140,140.199996948242,140.399993896484,140.600006103516,140.800003051758,141,141.199996948242,141.399993896484,141.600006103516,141.800003051758,142,142.199996948242,142.399993896484,142.600006103516,142.800003051758,143,143.199996948242,143.399993896484,143.600006103516,143.800003051758,144,144.199996948242,144.399993896484,144.600006103516,144.800003051758,145,145.199996948242,145.399993896484,145.600006103516,139.600006103516,139.800003051758,140,140.199996948242,140.399993896484,140.600006103516,140.800003051758,141,141.199996948242,141.399993896484,141.600006103516,141.800003051758,142,142.199996948242,142.399993896484,142.600006103516,142.800003051758,143,143.199996948242,143.399993896484,143.600006103516,143.800003051758,144,144.199996948242,144.399993896484,144.600006103516,144.800003051758,145,145.199996948242,145.399993896484,145.600006103516,139.600006103516,139.800003051758,140,140.199996948242,140.399993896484,140.600006103516,140.800003051758,141,141.199996948242,141.399993896484,141.600006103516,141.800003051758,142,142.199996948242,142.399993896484,142.600006103516,142.800003051758,143,143.199996948242,143.399993896484,143.600006103516,143.800003051758,144,144.199996948242,144.399993896484,144.600006103516,144.800003051758,145,145.199996948242,145.399993896484,145.600006103516,139.600006103516,139.800003051758,140,140.199996948242,140.399993896484,140.600006103516,140.800003051758,141,141.199996948242,141.399993896484,141.600006103516,141.800003051758,142,142.199996948242,142.399993896484,142.600006103516,142.800003051758,143,143.199996948242,143.399993896484,143.600006103516,143.800003051758,144,144.199996948242,144.399993896484,144.600006103516,144.800003051758,145,145.199996948242,145.399993896484,145.600006103516,139.600006103516,139.800003051758,140,140.199996948242,140.399993896484,140.600006103516,140.800003051758,141,141.199996948242,141.399993896484,141.600006103516,141.800003051758,142,142.199996948242,142.399993896484,142.600006103516,142.800003051758,143,143.199996948242,143.399993896484,143.600006103516,143.800003051758,144,144.199996948242,144.399993896484,144.600006103516,144.800003051758,145,145.199996948242,145.399993896484,145.600006103516,139.600006103516,139.800003051758,140,140.199996948242,140.399993896484,140.600006103516,140.800003051758,141,141.199996948242,141.399993896484,141.600006103516,141.800003051758,142,142.199996948242,142.399993896484,142.600006103516,142.800003051758,143,143.199996948242,143.399993896484,143.600006103516,143.800003051758,144,144.199996948242,144.399993896484,144.600006103516,144.800003051758,145,145.199996948242,145.399993896484,145.600006103516,139.600006103516,139.800003051758,140,140.199996948242,140.399993896484,140.600006103516,140.800003051758,141,141.199996948242,141.399993896484,141.600006103516,141.800003051758,142,142.199996948242,142.399993896484,142.600006103516,142.800003051758,143,143.199996948242,143.399993896484,143.600006103516,143.800003051758,144,144.199996948242,144.399993896484,144.600006103516,144.800003051758,145,145.199996948242,145.399993896484,145.600006103516,139.600006103516,139.800003051758,140,140.199996948242,140.399993896484,140.600006103516,140.800003051758,141,141.199996948242,141.399993896484,141.600006103516,141.800003051758,142,142.199996948242,142.399993896484,142.600006103516,142.800003051758,143,143.199996948242,143.399993896484,143.600006103516,143.800003051758,144,144.199996948242,144.399993896484,144.600006103516,144.800003051758,145,145.199996948242,145.399993896484,145.600006103516,139.600006103516,139.800003051758,140,140.199996948242,140.399993896484,140.600006103516,140.800003051758,141,141.199996948242,141.399993896484,141.600006103516,141.800003051758,142,142.199996948242,142.399993896484,142.600006103516,142.800003051758,143,143.199996948242,143.399993896484,143.600006103516,143.800003051758,144,144.199996948242,144.399993896484,144.600006103516,144.800003051758,145,145.199996948242,145.399993896484,145.600006103516,139.600006103516,139.800003051758,140,140.199996948242,140.399993896484,140.600006103516,140.800003051758,141,141.199996948242,141.399993896484,141.600006103516,141.800003051758,142,142.199996948242,142.399993896484,142.600006103516,142.800003051758,143,143.199996948242,143.399993896484,143.600006103516,143.800003051758,144,144.199996948242,144.399993896484,144.600006103516,144.800003051758,145,145.199996948242,145.399993896484,145.600006103516,139.600006103516,139.800003051758,140,140.199996948242,140.399993896484,140.600006103516,140.800003051758,141,141.199996948242,141.399993896484,141.600006103516,141.800003051758,142,142.199996948242,142.399993896484,142.600006103516,142.800003051758,143,143.199996948242,143.399993896484,143.600006103516,143.800003051758,144,144.199996948242,144.399993896484,144.600006103516,144.800003051758,145,145.199996948242,145.399993896484,145.600006103516,139.600006103516,139.800003051758,140,140.199996948242,140.399993896484,140.600006103516,140.800003051758,141,141.199996948242,141.399993896484,141.600006103516,141.800003051758,142,142.199996948242,142.399993896484,142.600006103516,142.800003051758,143,143.199996948242,143.399993896484,143.600006103516,143.800003051758,144,144.199996948242,144.399993896484,144.600006103516,144.800003051758,145,145.199996948242,145.399993896484,145.600006103516,139.600006103516,139.800003051758,140,140.199996948242,140.399993896484,140.600006103516,140.800003051758,141,141.199996948242,141.399993896484,141.600006103516,141.800003051758,142,142.199996948242,142.399993896484,142.600006103516,142.800003051758,143,143.199996948242,143.399993896484,143.600006103516,143.800003051758,144,144.199996948242,144.399993896484,144.600006103516,144.800003051758,145,145.199996948242,145.399993896484,145.600006103516],[45.5999984741211,45.5999984741211,45.5999984741211,45.5999984741211,45.5999984741211,45.5999984741211,45.5999984741211,45.5999984741211,45.5999984741211,45.5999984741211,45.5999984741211,45.5999984741211,45.5999984741211,45.5999984741211,45.5999984741211,45.5999984741211,45.5999984741211,45.5999984741211,45.5999984741211,45.5999984741211,45.5999984741211,45.5999984741211,45.5999984741211,45.5999984741211,45.5999984741211,45.5999984741211,45.5999984741211,45.5999984741211,45.5999984741211,45.5999984741211,45.5999984741211,45.4000015258789,45.4000015258789,45.4000015258789,45.4000015258789,45.4000015258789,45.4000015258789,45.4000015258789,45.4000015258789,45.4000015258789,45.4000015258789,45.4000015258789,45.4000015258789,45.4000015258789,45.4000015258789,45.4000015258789,45.4000015258789,45.4000015258789,45.4000015258789,45.4000015258789,45.4000015258789,45.4000015258789,45.4000015258789,45.4000015258789,45.4000015258789,45.4000015258789,45.4000015258789,45.4000015258789,45.4000015258789,45.4000015258789,45.4000015258789,45.4000015258789,45.2000007629395,45.2000007629395,45.2000007629395,45.2000007629395,45.2000007629395,45.2000007629395,45.2000007629395,45.2000007629395,45.2000007629395,45.2000007629395,45.2000007629395,45.2000007629395,45.2000007629395,45.2000007629395,45.2000007629395,45.2000007629395,45.2000007629395,45.2000007629395,45.2000007629395,45.2000007629395,45.2000007629395,45.2000007629395,45.2000007629395,45.2000007629395,45.2000007629395,45.2000007629395,45.2000007629395,45.2000007629395,45.2000007629395,45.2000007629395,45.2000007629395,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,44.7999992370605,44.7999992370605,44.7999992370605,44.7999992370605,44.7999992370605,44.7999992370605,44.7999992370605,44.7999992370605,44.7999992370605,44.7999992370605,44.7999992370605,44.7999992370605,44.7999992370605,44.7999992370605,44.7999992370605,44.7999992370605,44.7999992370605,44.7999992370605,44.7999992370605,44.7999992370605,44.7999992370605,44.7999992370605,44.7999992370605,44.7999992370605,44.7999992370605,44.7999992370605,44.7999992370605,44.7999992370605,44.7999992370605,44.7999992370605,44.7999992370605,44.5999984741211,44.5999984741211,44.5999984741211,44.5999984741211,44.5999984741211,44.5999984741211,44.5999984741211,44.5999984741211,44.5999984741211,44.5999984741211,44.5999984741211,44.5999984741211,44.5999984741211,44.5999984741211,44.5999984741211,44.5999984741211,44.5999984741211,44.5999984741211,44.5999984741211,44.5999984741211,44.5999984741211,44.5999984741211,44.5999984741211,44.5999984741211,44.5999984741211,44.5999984741211,44.5999984741211,44.5999984741211,44.5999984741211,44.5999984741211,44.5999984741211,44.4000015258789,44.4000015258789,44.4000015258789,44.4000015258789,44.4000015258789,44.4000015258789,44.4000015258789,44.4000015258789,44.4000015258789,44.4000015258789,44.4000015258789,44.4000015258789,44.4000015258789,44.4000015258789,44.4000015258789,44.4000015258789,44.4000015258789,44.4000015258789,44.4000015258789,44.4000015258789,44.4000015258789,44.4000015258789,44.4000015258789,44.4000015258789,44.4000015258789,44.4000015258789,44.4000015258789,44.4000015258789,44.4000015258789,44.4000015258789,44.4000015258789,44.2000007629395,44.2000007629395,44.2000007629395,44.2000007629395,44.2000007629395,44.2000007629395,44.2000007629395,44.2000007629395,44.2000007629395,44.2000007629395,44.2000007629395,44.2000007629395,44.2000007629395,44.2000007629395,44.2000007629395,44.2000007629395,44.2000007629395,44.2000007629395,44.2000007629395,44.2000007629395,44.2000007629395,44.2000007629395,44.2000007629395,44.2000007629395,44.2000007629395,44.2000007629395,44.2000007629395,44.2000007629395,44.2000007629395,44.2000007629395,44.2000007629395,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,43.7999992370605,43.7999992370605,43.7999992370605,43.7999992370605,43.7999992370605,43.7999992370605,43.7999992370605,43.7999992370605,43.7999992370605,43.7999992370605,43.7999992370605,43.7999992370605,43.7999992370605,43.7999992370605,43.7999992370605,43.7999992370605,43.7999992370605,43.7999992370605,43.7999992370605,43.7999992370605,43.7999992370605,43.7999992370605,43.7999992370605,43.7999992370605,43.7999992370605,43.7999992370605,43.7999992370605,43.7999992370605,43.7999992370605,43.7999992370605,43.7999992370605,43.5999984741211,43.5999984741211,43.5999984741211,43.5999984741211,43.5999984741211,43.5999984741211,43.5999984741211,43.5999984741211,43.5999984741211,43.5999984741211,43.5999984741211,43.5999984741211,43.5999984741211,43.5999984741211,43.5999984741211,43.5999984741211,43.5999984741211,43.5999984741211,43.5999984741211,43.5999984741211,43.5999984741211,43.5999984741211,43.5999984741211,43.5999984741211,43.5999984741211,43.5999984741211,43.5999984741211,43.5999984741211,43.5999984741211,43.5999984741211,43.5999984741211,43.4000015258789,43.4000015258789,43.4000015258789,43.4000015258789,43.4000015258789,43.4000015258789,43.4000015258789,43.4000015258789,43.4000015258789,43.4000015258789,43.4000015258789,43.4000015258789,43.4000015258789,43.4000015258789,43.4000015258789,43.4000015258789,43.4000015258789,43.4000015258789,43.4000015258789,43.4000015258789,43.4000015258789,43.4000015258789,43.4000015258789,43.4000015258789,43.4000015258789,43.4000015258789,43.4000015258789,43.4000015258789,43.4000015258789,43.4000015258789,43.4000015258789,43.2000007629395,43.2000007629395,43.2000007629395,43.2000007629395,43.2000007629395,43.2000007629395,43.2000007629395,43.2000007629395,43.2000007629395,43.2000007629395,43.2000007629395,43.2000007629395,43.2000007629395,43.2000007629395,43.2000007629395,43.2000007629395,43.2000007629395,43.2000007629395,43.2000007629395,43.2000007629395,43.2000007629395,43.2000007629395,43.2000007629395,43.2000007629395,43.2000007629395,43.2000007629395,43.2000007629395,43.2000007629395,43.2000007629395,43.2000007629395,43.2000007629395,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,42.7999992370605,42.7999992370605,42.7999992370605,42.7999992370605,42.7999992370605,42.7999992370605,42.7999992370605,42.7999992370605,42.7999992370605,42.7999992370605,42.7999992370605,42.7999992370605,42.7999992370605,42.7999992370605,42.7999992370605,42.7999992370605,42.7999992370605,42.7999992370605,42.7999992370605,42.7999992370605,42.7999992370605,42.7999992370605,42.7999992370605,42.7999992370605,42.7999992370605,42.7999992370605,42.7999992370605,42.7999992370605,42.7999992370605,42.7999992370605,42.7999992370605,42.5999984741211,42.5999984741211,42.5999984741211,42.5999984741211,42.5999984741211,42.5999984741211,42.5999984741211,42.5999984741211,42.5999984741211,42.5999984741211,42.5999984741211,42.5999984741211,42.5999984741211,42.5999984741211,42.5999984741211,42.5999984741211,42.5999984741211,42.5999984741211,42.5999984741211,42.5999984741211,42.5999984741211,42.5999984741211,42.5999984741211,42.5999984741211,42.5999984741211,42.5999984741211,42.5999984741211,42.5999984741211,42.5999984741211,42.5999984741211,42.5999984741211,42.4000015258789,42.4000015258789,42.4000015258789,42.4000015258789,42.4000015258789,42.4000015258789,42.4000015258789,42.4000015258789,42.4000015258789,42.4000015258789,42.4000015258789,42.4000015258789,42.4000015258789,42.4000015258789,42.4000015258789,42.4000015258789,42.4000015258789,42.4000015258789,42.4000015258789,42.4000015258789,42.4000015258789,42.4000015258789,42.4000015258789,42.4000015258789,42.4000015258789,42.4000015258789,42.4000015258789,42.4000015258789,42.4000015258789,42.4000015258789,42.4000015258789,42.2000007629395,42.2000007629395,42.2000007629395,42.2000007629395,42.2000007629395,42.2000007629395,42.2000007629395,42.2000007629395,42.2000007629395,42.2000007629395,42.2000007629395,42.2000007629395,42.2000007629395,42.2000007629395,42.2000007629395,42.2000007629395,42.2000007629395,42.2000007629395,42.2000007629395,42.2000007629395,42.2000007629395,42.2000007629395,42.2000007629395,42.2000007629395,42.2000007629395,42.2000007629395,42.2000007629395,42.2000007629395,42.2000007629395,42.2000007629395,42.2000007629395,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,41.7999992370605,41.7999992370605,41.7999992370605,41.7999992370605,41.7999992370605,41.7999992370605,41.7999992370605,41.7999992370605,41.7999992370605,41.7999992370605,41.7999992370605,41.7999992370605,41.7999992370605,41.7999992370605,41.7999992370605,41.7999992370605,41.7999992370605,41.7999992370605,41.7999992370605,41.7999992370605,41.7999992370605,41.7999992370605,41.7999992370605,41.7999992370605,41.7999992370605,41.7999992370605,41.7999992370605,41.7999992370605,41.7999992370605,41.7999992370605,41.7999992370605,41.5999984741211,41.5999984741211,41.5999984741211,41.5999984741211,41.5999984741211,41.5999984741211,41.5999984741211,41.5999984741211,41.5999984741211,41.5999984741211,41.5999984741211,41.5999984741211,41.5999984741211,41.5999984741211,41.5999984741211,41.5999984741211,41.5999984741211,41.5999984741211,41.5999984741211,41.5999984741211,41.5999984741211,41.5999984741211,41.5999984741211,41.5999984741211,41.5999984741211,41.5999984741211,41.5999984741211,41.5999984741211,41.5999984741211,41.5999984741211,41.5999984741211,41.4000015258789,41.4000015258789,41.4000015258789,41.4000015258789,41.4000015258789,41.4000015258789,41.4000015258789,41.4000015258789,41.4000015258789,41.4000015258789,41.4000015258789,41.4000015258789,41.4000015258789,41.4000015258789,41.4000015258789,41.4000015258789,41.4000015258789,41.4000015258789,41.4000015258789,41.4000015258789,41.4000015258789,41.4000015258789,41.4000015258789,41.4000015258789,41.4000015258789,41.4000015258789,41.4000015258789,41.4000015258789,41.4000015258789,41.4000015258789,41.4000015258789],[264.713958740234,263.742004394531,265.249481201172,265.675659179688,265.675659179688,238.155960083008,278.207305908203,275.876403808594,271.078582763672,278.54931640625,273.978637695312,274.819396972656,271.778503417969,277.864166259766,276.448303222656,271.878082275391,267.673400878906,273.783599853516,280.395233154297,282.329162597656,283.372161865234,276.638244628906,258.446960449219,247.394226074219,256.738098144531,260.235290527344,269.765045166016,249.696151733398,244.70166015625,247.217681884766,246.774490356445,264.498870849609,264.606475830078,267.673400878906,274.496856689453,277.237335205078,274.464538574219,261.580596923828,279.322418212891,281.608062744141,280.456207275391,278.704406738281,274.464538574219,273.359710693359,278.673400878906,273.228912353516,266.029266357422,271.145446777344,274.076019287109,279.322418212891,284.844909667969,284.28759765625,267.673400878906,262.612884521484,244.610214233398,260.046813964844,270.777038574219,261.876770019531,276.953979492188,268.947631835938,275.07666015625,267.708068847656,264.606475830078,269.254974365234,275.812652587891,278.456146240234,281.999267578125,269.866729736328,264.678161621094,275.589233398438,275.844543457031,272.539367675781,281.879058837891,278.518280029297,283.372161865234,277.957885742188,266.029266357422,256.423645019531,270.37353515625,277.142974853516,276.035583496094,282.807220458984,283.579528808594,279.199127197266,253.945419311523,267.291198730469,273.130706787109,267.116973876953,274.883758544922,278.890197753906,274.173278808594,266.381530761719,262.392700195312,266.346374511719,277.237335205078,282.239288330078,271.778503417969,282.53857421875,278.113830566406,264.606475830078,271.245697021484,281.638214111328,282.687896728516,283.934143066406,281.275909423828,271.078582763672,278.673400878906,275.07666015625,265.781890869141,270.035949707031,277.519866943359,273.522979736328,272.769744873047,283.845611572266,279.507110595703,261.950653076172,234.189605712891,266.907440185547,271.112030029297,278.113830566406,278.176177978516,277.42578125,277.676513671875,275.78076171875,274.496856689453,284.199340820312,284.346405029297,273.196197509766,280.942718505859,254.188537597656,279.875518798828,270.911163330078,284.199340820312,284.757110595703,284.081573486328,282.837005615234,269.220886230469,271.512481689453,279.044769287109,263.669586181641,269.2890625,279.660797119141,266.627349853516,279.814208984375,280.120422363281,282.508666992188,278.580352783203,260.423400878906,280.821319580078,256.541717529297,276.574951171875,278.487213134766,272.209289550781,279.013885498047,275.908264160156,285.224609375,285.661071777344,282.807220458984,263.48828125,279.722198486328,282.389038085938,278.982971191406,271.412506103516,285.195434570312,283.756988525391,284.610595703125,283.372161865234,283.934143066406,279.322418212891,278.113830566406,282.568450927734,260.197631835938,281.245666503906,266.346374511719,277.174438476562,280.212097167969,282.896606445312,271.944427490234,270.474578857422,263.633361816406,264.139251708984,246.462707519531,262.282409667969,273.881164550781,278.020294189453,282.269256591797,285.922119140625,286.701629638672,281.848968505859,281.638214111328,264.067138671875,280.212097167969,272.275390625,280.242645263672,282.209320068359,284.727813720703,284.081573486328,282.866821289062,282.717742919922,285.078704833984,283.490692138672,279.414825439453,269.459320068359,271.878082275391,270.642730712891,279.967437744141,280.942718505859,281.124603271484,284.405181884766,283.963653564453,285.166259765625,270.978179931641,248.965225219727,248.008987426758,274.173278808594,278.331817626953,280.486694335938,281.30615234375,286.759155273438,286.759155273438,283.638732910156,283.104919433594,261.283416748047,280.334228515625,264.355194091797,280.942718505859,283.520324707031,282.926391601562,281.30615234375,280.730163574219,282.239288330078,280.760559082031,272.076934814453,279.599334716797,274.658264160156,278.14501953125,284.434539794922,277.895416259766,280.760559082031,285.719146728516,286.240386962891,285.282897949219,285.893157958984,249.353042602539,265.746490478516,272.043823242188,275.940093994141,281.668334960938,286.960266113281,286.298126220703,286.182586669922,275.844543457031,276.321502685547,275.172973632812,259.478820800781,280.36474609375,283.756988525391,271.078582763672,278.828308105469,277.864166259766,278.797332763672,282.687896728516,279.998046875,273.163452148438,269.254974365234,283.0751953125,279.137420654297,280.669342041016,287.532867431641,286.6728515625,288.499633789062,287.589965820312,287.304168701172,286.874114990234,281.608062744141,276.0673828125,271.878082275391,267.186706542969,274.529174804688,285.602966308594,274.432220458984,284.375793457031,286.586517333984,271.977569580078,276.543304443359,278.797332763672,270.002136230469,275.971954345703,284.317016601562,286.528900146484,281.154876708984,280.638916015625,275.012390136719,278.704406738281,278.487213134766,275.78076171875,263.051666259766,256.973175048828,283.312835693359,289.906524658203,290.825714111328,281.969207763672,289.317749023438,288.669372558594,290.353118896484,287.732574462891,284.434539794922,261.43212890625,266.170349121094,275.653106689453,287.818054199219,285.224609375,285.661071777344,286.298126220703,281.608062744141,286.298126220703,281.547760009766,281.336395263672,258.215942382812,277.457153320312,282.717742919922,277.519866943359,282.299224853516,282.389038085938,282.448883056641,273.588195800781,280.028656005859,277.300170898438,265.958648681641,279.599334716797,286.384735107422,288.669372558594,288.045715332031,283.786529541016,286.298126220703,286.874114990234,285.806182861328,276.606597900391,259.630645751953,246.99641418457,278.735382080078,286.787902832031,285.486694335938,285.370269775391,282.956176757812,286.355865478516,286.931549072266,279.507110595703,263.451965332031,281.547760009766,266.557189941406,273.490325927734,283.490692138672,280.395233154297,278.269592285156,263.778167724609,281.939178466797,277.237335205078,282.359100341797,277.394409179688,279.906188964844,283.194061279297,281.668334960938,286.701629638672,286.471252441406,285.864166259766,281.848968505859,286.009002685547,272.341461181641,255.989334106445,244.518661499023,265.817260742188,285.137084960938,276.922454833984,286.41357421875,286.06689453125,283.875122070312,279.752868652344,285.282897949219,283.609130859375,287.103698730469,280.242645263672,287.075012207031,283.104919433594,279.322418212891,284.169921875,285.312042236328,274.043579101562,277.111480712891,286.182586669922,282.179321289062,280.456207275391,281.758697509766,281.969207763672,282.448883056641,284.844909667969,285.544860839844,286.500061035156,286.960266113281,286.845397949219,271.345825195312,255.43327331543,249.094711303711,285.457611083984,284.581268310547,285.10791015625,285.951110839844,287.304168701172,286.06689453125,283.934143066406,281.245666503906,288.471313476562,283.756988525391,283.312835693359,282.359100341797,276.669860839844,283.934143066406,283.223754882812,283.134643554688,282.359100341797,286.6728515625,287.532867431641,284.081573486328,281.758697509766,268.295440673828,268.981811523438,285.864166259766,287.046356201172,287.447143554688,287.561401367188,287.304168701172,286.06689453125,257.441345214844,253.701583862305,287.218292236328,284.932647705078,287.246917724609,287.761077880859,284.669219970703,286.124755859375,281.969207763672,282.269256591797,285.224609375,284.346405029297,283.963653564453,281.939178466797,284.317016601562,283.253448486328,284.169921875,281.848968505859,278.766387939453,282.687896728516,270.339813232422,285.224609375,281.818878173828,262.722778320312,280.912384033203,283.875122070312,287.675567626953,287.647033691406,287.532867431641,287.389984130859,286.06689453125,269.900604248047,252.96565246582,282.119354248047,280.120422363281,283.786529541016,282.478790283203,278.766387939453,282.807220458984,281.064025878906,281.969207763672,286.586517333984,283.609130859375,282.687896728516,285.195434570312,285.632019042969,282.119354248047,282.179321289062,283.0751953125,264.427062988281,286.960266113281,285.922119140625,286.298126220703,285.282897949219,271.145446777344,276.922454833984,283.816070556641,284.844909667969,283.520324707031,285.049530029297,284.903411865234,284.199340820312,251.473327636719,273.097961425781,281.848968505859,279.291625976562,281.909118652344,281.638214111328,275.525299072266,280.486694335938,280.486694335938,283.401794433594,281.215423583984,283.520324707031,283.727447509766,281.939178466797,280.942718505859,280.486694335938,280.181549072266,286.037963867188,276.0673828125,283.283142089844,286.701629638672,282.389038085938,277.707824707031,278.797332763672,274.883758544922,277.457153320312,283.934143066406,282.209320068359,285.253753662109,284.228790283203,284.052093505859,274.948120117188,273.457702636719,279.137420654297,277.268768310547,278.051483154297,272.209289550781,278.051483154297,279.445587158203,283.963653564453,283.579528808594,281.245666503906,281.396820068359,282.359100341797,278.456146240234,279.783538818359,276.890899658203,280.395233154297,281.245666503906,274.238098144531,280.882049560547,284.639923095703,281.003387451172,279.353240966797,281.457214355469,275.812652587891,277.42578125,280.790924072266,278.735382080078,281.969207763672,282.837005615234,283.549926757812,278.487213134766,282.777404785156,282.53857421875,284.551940917969,280.212097167969,274.883758544922,278.642395019531,282.777404785156,283.875122070312,282.269256591797,280.120422363281,280.547607421875,281.879058837891,281.094299316406,280.912384033203,280.395233154297,277.488525390625,279.445587158203,281.215423583984,275.940093994141,281.879058837891,278.642395019531,279.507110595703,279.476348876953,267.950378417969,280.547607421875,282.119354248047,280.851684570312,280.882049560547,282.029296875,284.317016601562,282.269256591797,282.179321289062,284.258178710938,279.353240966797,282.059326171875,259.326751708984,276.606597900391,280.638916015625,281.336395263672,283.134643554688,280.3037109375,278.766387939453,275.429321289062,281.336395263672,284.375793457031,279.229949951172,280.08984375,274.140869140625,279.106536865234,282.53857421875,282.837005615234,277.926635742188,274.335205078125,276.47998046875,280.790924072266,283.283142089844,280.912384033203,281.185150146484,282.029296875,279.630065917969,279.199127197266,283.283142089844,283.134643554688,287.389984130859,281.366607666016,280.273193359375,234.507171630859,276.7646484375,278.611389160156,286.41357421875,283.194061279297,281.848968505859,280.028656005859,279.414825439453,279.722198486328,277.582550048828,276.638244628906,281.427032470703,270.4072265625,283.845611572266,285.951110839844,276.827789306641,278.331817626953,278.331817626953,275.844543457031,279.814208984375,283.431457519531,285.312042236328,281.185150146484,281.215423583984,282.598327636719,282.239288330078,281.124603271484,281.909118652344,288.386322021484,286.557708740234,280.395233154297,237.804733276367,256.934051513672,275.269165039062,287.017669677734,286.988952636719,281.03369140625,283.904632568359,281.427032470703,279.229949951172,281.03369140625,285.777191162109,278.735382080078,275.812652587891,279.875518798828,284.375793457031,282.029296875,281.124603271484,260.611083984375,278.766387939453,280.3037109375,279.844879150391,281.698455810547,280.730163574219,280.882049560547,283.875122070312,283.283142089844,282.985931396484,282.508666992188]],"metaData":{}};

		par.scope().paste(datasrc);
		map1.scope().paste(datasrc);
		map2.scope().paste(datasrc);
		scatter.scope().paste(datasrc);
		barChart1.scope().paste(datasrc);
		barChart2.scope().paste(datasrc);

		onResize(); // do the layout

		datasrc.scope().set("PreDefinedColorScheme", 2);

		// $log.log(preDebugMsg + "call loadByFunctionCall");
		datasrc.scope().loadByFunctionCall(data);

		// wait for everyone to initialize properly, so use a timeout
		$timeout(function() {setupDone = true; setMappings();}, 1);
		$scope.displayText = "Himawari App Loaded";
	};
	//===================================================================================


	//===================================================================================
	// Set Mappings
	// This method sets all the data mappings between the data manager webble and the
	// visualization Webbles.
	//===================================================================================
	function setMappings() {
		var datasrc = $scope.getWebbleByInstanceId(loadedChildren[dataSrcName][0]);
		var sourceInstanceId = loadedChildren[dataSrcName][0];
		var sourceName = datasrc.scope().gimme("PluginName");
		var dataSetName = sourceName;
		var dataSetIdx = 0;
		var fieldName = "";
		var dataFields = datasrc.scope().gimme("DataAccess");
		var netCDF = false;
		var other3D = false;
		var name3D = [];
		var csvsample = false;
		var lex = {};
		var curMapping = "";

		for(var f = 0 ; f < dataFields.length; f++) {
			fieldName = dataFields[f].name;
			var info = {"webbleID":sourceInstanceId, "type":dataFields[f].type, "slotName":"DataAccess", "fieldIdx":f, "sourceName":sourceName, "fieldName":fieldName};
			lex[fieldName] = {"name":fieldName, "type":dataFields[f].type.join("|"), "noofRows":dataFields[f].size, "id":JSON.stringify(info)};
			curMapping += fieldName + "--" + dataFields[f].type.join("|") + ";";

			if(fieldName == "tbb") {
				netCDF = true;
			}
			if(fieldName == '"longitude"') {
				csvsample = true;
			}
			if(dataFields[f].type == "3Darray") {
				other3D = true;
				name3D.push(fieldName);
			}
		}

		if(curMapping != lastSeenMapping) {
			lastSeenMapping = curMapping;

			$log.log(preDebugMsg + "pause updates");
			datasrc.scope().pauseUpdates(true);

			var par = $scope.getWebbleByInstanceId(loadedChildren[parName][0]);
			var map1 = $scope.getWebbleByInstanceId(loadedChildren[mapName][0]);
			var map2 = $scope.getWebbleByInstanceId(loadedChildren[mapName][1]);
			var scatter = $scope.getWebbleByInstanceId(loadedChildren[scatterName][0]);
			var barChart1 = $scope.getWebbleByInstanceId(loadedChildren[barName][0]);
			var barChart2 = $scope.getWebbleByInstanceId(loadedChildren[barName][1]);

			par.scope().clearData();
			map1.scope().clearData();
			map2.scope().clearData();
			scatter.scope().clearData();
			barChart1.scope().clearData();
			barChart2.scope().clearData();

			if(netCDF) {
				par.scope().fakeDropNoRedraw(lex["idx -> Band"].id, 'New Coordinate');
				par.scope().fakeDropNoRedraw(lex["idx -> tbb"].id, 'New Coordinate');
				par.scope().fakeDropNoRedraw(lex["idx -> Y"].id, 'New Coordinate');
				par.scope().fakeDropNoRedraw(lex["idx -> X"].id, 'New Coordinate');

				barChart1.scope().fakeDrop(lex["TimeStamp"].id, 'data');
				barChart2.scope().fakeDrop(lex["Band"].id, 'data');

				map1.scope().fakeDrop(lex["tbb"].id, '3D');
				map1.scope().fakeDrop(lex["X coordinates"].id, 'Point Longitude');
				map1.scope().fakeDrop(lex["Y coordinates"].id, 'Point Latitude');
				map1.scope().fakeDrop(lex["idx -> tbb"].id, '3D Cells');

				map2.scope().fakeDrop(lex["tbb"].id, '3D');
				map2.scope().fakeDrop(lex["X coordinates"].id, 'Point Longitude');
				map2.scope().fakeDrop(lex["Y coordinates"].id, 'Point Latitude');
				map2.scope().fakeDrop(lex["idx -> tbb"].id, '3D Cells');

				scatter.scope().fakeDrop(lex["idx -> X"].id, 'dataX');
				scatter.scope().fakeDrop(lex["idx -> tbb"].id, 'dataY');
			}
			else if(csvsample) {
				par.scope().fakeDropNoRedraw(lex['"longitude"'].id, 'New Coordinate');
				par.scope().fakeDropNoRedraw(lex['"latitude"'].id, 'New Coordinate');
				par.scope().fakeDropNoRedraw(lex['"himawari"'].id, 'New Coordinate');

				barChart1.scope().fakeDrop(lex['"himawari"'].id, 'data');
				barChart2.scope().fakeDrop(lex['"himawari"'].id, 'data');

				map1.scope().fakeDrop(lex['"longitude"'].id, 'Point Longitude');
				map1.scope().fakeDrop(lex['"latitude"'].id, 'Point Latitude');
				map1.scope().fakeDrop(lex['"himawari"'].id, 'Point Value');

				map2.scope().fakeDrop(lex['"longitude"'].id, 'Point Longitude');
				map2.scope().fakeDrop(lex['"latitude"'].id, 'Point Latitude');
				map2.scope().fakeDrop(lex['"himawari"'].id, 'Point Value');

				scatter.scope().fakeDrop(lex['"longitude"'].id, 'dataX');
				scatter.scope().fakeDrop(lex['"himawari"'].id, 'dataY');
			}
			else if(other3D) {
				var lastIdx = "";
				var secondLastIdx = "";
				for(var f = 0 ; f < dataFields.length; f++) {
					fieldName = dataFields[f].name;

					if(fieldName.indexOf("idx -> ")  >= 0 ) {
						par.scope().fakeDropNoRedraw(lex[fieldName].id, 'New Coordinate');
						secondLastIdx = lastIdx;
						lastIdx = fieldName;
					}
				}

				if(lex.hasOwnProperty("Time Stamp")) {
					barChart1.scope().fakeDrop(lex["Time Stamp"].id, 'data');
				}
				else if(lex.hasOwnProperty("TimeStamp")) {
					barChart1.scope().fakeDrop(lex["TimeStamp"].id, 'data');
				}
				if(lex.hasOwnProperty("Band")) {
					barChart2.scope().fakeDrop(lex["Band"].id, 'data');
				}

				map1.scope().fakeDrop(lex[name3D[0]].id, '3D');
				map1.scope().fakeDrop(lex["X coordinates"].id, 'Point Longitude');
				map1.scope().fakeDrop(lex["Y coordinates"].id, 'Point Latitude');
				if(lastIdx != "") {
					map1.scope().fakeDrop(lex[lastIdx].id, '3D Cells');
				}

				if(name3D.length > 1) {
					map2.scope().fakeDrop(lex[name3D[1]].id, '3D');
				}
				else {
					map2.scope().fakeDrop(lex[name3D[0]].id, '3D');
				}
				map2.scope().fakeDrop(lex["X coordinates"].id, 'Point Longitude');
				map2.scope().fakeDrop(lex["Y coordinates"].id, 'Point Latitude');
				if(lastIdx != "") {
					map2.scope().fakeDrop(lex[lastIdx].id, '3D Cells');
				}

				if(lastIdx != "" && secondLastIdx != "") {
					scatter.scope().fakeDrop(lex[secondLastIdx].id, 'dataX');
					scatter.scope().fakeDrop(lex[lastIdx].id, 'dataY');
				}
			}

			$log.log(preDebugMsg + "unpause updates");
			datasrc.scope().pauseUpdates(false);
			$timeout(function() { selectAll(); }, 1);
		}
	}
	//===================================================================================


	//===================================================================================
	// Load Webble Defs
	// This method loads all the required Webbles that is required for this application
	// to run properly.
	//===================================================================================
	var loadWebbleDefs = function() {
		neededChildren = {};
		loadedChildren = {};

		neededChildren[hopSupportName] = 1;
		neededChildren[mapName] = 2;
		neededChildren[parName] = 1;
		neededChildren[scatterName] = 1;
		neededChildren[barName] = 2;
		neededChildren[dataSrcName] = 1;

		for(var w in neededChildren) {
			loadedChildren[w] = [];
		}

		$scope.downloadWebbleDef(dataSrcName);
	};
	//===================================================================================


	//===================================================================================
	// Select All
	// This method selects all data for all components.
	//===================================================================================
	function selectAll() {
		$log.log(preDebugMsg + "Select all data in all components");
		var datasrc = $scope.getWebbleByInstanceId(loadedChildren[dataSrcName][0]);
		$log.log(preDebugMsg + "pause updates");
		datasrc.scope().pauseUpdates(true);

		if(loadedChildren.hasOwnProperty(parName) && loadedChildren[parName].length > 0) {
			$scope.getWebbleByInstanceId(loadedChildren[parName][0]).scope().selectAll();
		}
		if(loadedChildren.hasOwnProperty(mapName) && loadedChildren[mapName].length > 0) {
			$scope.getWebbleByInstanceId(loadedChildren[mapName][0]).scope().selectAll();
		}
		if(loadedChildren.hasOwnProperty(mapName) && loadedChildren[mapName].length > 1) {
			$scope.getWebbleByInstanceId(loadedChildren[mapName][1]).scope().selectAll();
		}
		if(loadedChildren.hasOwnProperty(scatterName) && loadedChildren[scatterName].length > 0) {
			$scope.getWebbleByInstanceId(loadedChildren[scatterName][0]).scope().selectAll();
		}
		if(loadedChildren.hasOwnProperty(barName) && loadedChildren[barName].length > 0) {
			$scope.getWebbleByInstanceId(loadedChildren[barName][0]).scope().selectAll();
		}
		if(loadedChildren.hasOwnProperty(barName) && loadedChildren[barName].length > 1) {
			$scope.getWebbleByInstanceId(loadedChildren[barName][1]).scope().selectAll();
		}

		$log.log(preDebugMsg + "unpause updates");
		datasrc.scope().pauseUpdates(false);
	}
	//===================================================================================



	//=== CTRL MAIN CODE ======================================================================

});
//=======================================================================================

//======================================================================================================================
