######################################################################
# Redirection server
#
server {

    listen 80;
    server_name webbleworld.tk www.webbleworld.tk;

    location /.well-known {

      root /home/www/wblwrld3/.well-known; # PATH
      access_log        off;
      expires           10h;
    }

	location / {
		return			301 https://$host$request_uri;
	}
}

######################################################################
# The cluster
#
upstream main-app-tk {
    ip_hash;
    server localhost:7000 fail_timeout=1s;

    #server localhost:7000 weight=10 max_fails=3 fail_timeout=30s; # Reverse proxy to machine-1
    #server localhost:7010 weight=10 max_fails=3 fail_timeout=30s; # Reverse proxy to machine-2
}

######################################################################
# Main server that controls and combines all REST endpoints and static files
#
server {

	listen    443 ssl http2;
    server_name webbleworld.tk www.webbleworld.tk;

    error_page  404         /404.html;
    error_page  502         /502.html;

	keepalive_timeout     70;

    # SSL settings (configure the ssl_ciphers so it uses RC4)
    #
	ssl                         on;
	ssl_certificate             /etc/ssl/letsencrypt/certificate.crt; # PATH
	ssl_certificate_key         /etc/ssl/letsencrypt/private.key; # PATH

	ssl_session_cache           shared:SSL:40m;
	ssl_session_timeout         4h;
	ssl_buffer_size             1400;

	ssl_protocols               TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers                 'kEECDH+ECDSA+AES128 kEECDH+ECDSA+AES256 kEECDH+AES128 kEECDH+AES256 kEDH+AES128 kEDH+AES256 DES-CBC3-SHA +SHA !aNULL !eNULL !LOW !kECDH !DSS !MD5 !EXP !PSK !SRP !CAMELLIA !SEED';
	ssl_prefer_server_ciphers   on;

	# Static files
	#
	location / {

		root /home/www/wblwrld3/HEAD/app; # PATH

		index index.html

		proxy_cache           STATIC;
		proxy_cache_valid     200 30m;
		proxy_cache_valid 404 5m;

		access_log        off;
		expires           10h;
	}

	# WebZockets
	#
	location /socket.io {

		proxy_redirect      off;
		proxy_set_header    Host              $host;
		proxy_set_header    X-Real-IP         $remote_addr;
		proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
		proxy_set_header    X-Forwarded-Proto $scheme;

		# WebSocket specific
		#
		proxy_http_version  1.1;
		proxy_set_header    Upgrade           $http_upgrade;
		proxy_set_header    Connection        "upgrade";

		# Don't buffer up the response from origin servers but send them directly to the client.
		#
		proxy_buffering     off;

		# Bump the timeout's so someting sensible so our connections don't
		# disconnect automatically. We've set it to 12 hours.
		#
		proxy_connect_timeout 12h;
		proxy_read_timeout    12h;
		proxy_send_timeout    12h;

		# Move on
		#
		proxy_pass http://main-app-tk;
	}

	# Proxy settings
	#
	location /api {

		proxy_redirect      off;
		proxy_set_header    Host              $host;
		proxy_set_header    X-Real-IP         $remote_addr;
		proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
		proxy_set_header    X-Forwarded-Proto $scheme;

		# Don't buffer up the response from origin servers but send them directly to the client.
		#
		proxy_buffering     off;

		# Move on
		#
		proxy_pass http://main-app-tk;
	}

	location /auth {

		proxy_redirect      off;
		proxy_set_header    Host              $host;
		proxy_set_header    X-Real-IP         $remote_addr;
		proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
		proxy_set_header    X-Forwarded-Proto $scheme;

		# Don't buffer up the response from origin servers but send them directly to the client.
		#
		proxy_buffering     off;

		# Move on
		#
		proxy_pass http://main-app-tk;
	}

	# Fur mongodb-gridfs (or, generally, db- or app-backed) files
	#
	location /files {

		proxy_pass  http://main-app-tk;
		expires     3s;
	}

} # server
