worker_processes auto;

events {
    worker_connections  1024;
}

http {

  ######################################################################
  # The cluster
  #
  upstream main-app {
      ip_hash;
      server localhost:7000 weight=10 max_fails=3 fail_timeout=30s; # Reverse proxy to machine-1
      #server localhost:7010 weight=10 max_fails=3 fail_timeout=30s; # Reverse proxy to machine-2
  }

  ######################################################################
  # Default configuration values
  #
  include       mime.types;
  default_type  application/octet-stream;

  # Some default configuration
  #
  sendfile           on;
  tcp_nopush         on;
  keepalive_timeout  65;
  
  client_max_body_size	10M;

  ssl_session_cache   shared:SSL:10m;
  ssl_session_timeout 10m;

  ######################################################################
  # Main server that controls and combines all REST endpoints and static files
  #
  server {

#    listen    443 ssl http2 default_server;
    listen    443 ssl default_server;

    server_name  localhost;

    keepalive_timeout     70;
    ssl                   on;
    ssl_certificate       ../../../MEME/wblwrld3/serverside/keys/server.crt; # PATH
    ssl_certificate_key   ../../../MEME/wblwrld3/serverside/keys/server.key; # PATH
    ssl_session_timeout   10m;

    # Correctly configure the ssl_ciphers so it uses RC4
    #
    ssl_protocols               SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers                 RC4-SHA:AES128-SHA:AES:!ADH:!aNULL:!DH:!EDH:!eNULL;
    ssl_session_cache           shared:TLSSL:100m;
    ssl_prefer_server_ciphers   on;

    # Static files
    #
    location / {

      root ../../MEME/wblwrld3/app; # PATH

      index index.html

      access_log off;
      expires max;
    }

    # WebZockets
    #
    location /socket.io {

      proxy_redirect      off;
      proxy_set_header    Host              $host;
      proxy_set_header    X-Real-IP         $remote_addr;
      proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header    X-Forwarded-Proto $scheme;

      # WebSocket specific
      #
      proxy_http_version  1.1;
      proxy_set_header    Upgrade           $http_upgrade;
      proxy_set_header    Connection        "upgrade";
      #proxy_cache_bypass $http_upgrade;

      # Don't buffer up the response from origin servers but send them directly to the client.
      #
      proxy_buffering     off;

      # Bump the timeout's so someting sensible so our connections don't
      # disconnect automatically. We've set it to 12 hours.
      #
      proxy_connect_timeout 12h;
      proxy_read_timeout    12h;
      proxy_send_timeout    12h;

      # Move on
      #
      proxy_pass http://main-app;
    }

    # Proxy settings
    #
    location /api {

      proxy_redirect      off;
      proxy_set_header    Host              $host;
      proxy_set_header    X-Real-IP         $remote_addr;
      proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header    X-Forwarded-Proto $scheme;

      # Don't buffer up the response from origin servers but send them directly to the client.
      #
      proxy_buffering     off;
          
      # Move on
      #
      proxy_pass http://main-app;
    }

    location /auth {

      proxy_redirect      off;
      proxy_set_header    Host              $host;
      proxy_set_header    X-Real-IP         $remote_addr;
      proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header    X-Forwarded-Proto $scheme;

      # Don't buffer up the response from origin servers but send them directly to the client.
      #
      proxy_buffering     off;
          
      # Move on
      #
      proxy_pass http://main-app;
    }

    # Fur mongodb-gridfs (or, generally, db- or app-backed) files
    #
    location /files {

      proxy_pass  http://main-app;
      expires     3s;
    }

  } # server

  ######################################################################
  # Redirection server
  #
  server {
    listen         80;
    return         301 https://$host$request_uri;
  }

} # http
